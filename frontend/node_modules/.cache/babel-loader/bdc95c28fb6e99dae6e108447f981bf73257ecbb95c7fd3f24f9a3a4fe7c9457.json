{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arda\\\\Desktop\\\\detailinx\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './style.css';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserRouter, Navigate, RouterProvider } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\nimport axios from \"axios\";\nimport IndexPage from './pages/index/IndexPage';\n\n// store.dispatch(readPagesSettings(settings.pages));\n\n// try {\n//   const res = await axios.post(\"/account/information\")\n//   if (res.data.succeded) {\n//     res.data.user && store.dispatch(setUserInformations(res.data.user))\n//     res.data.products && store.dispatch(setProducts(res.data.products))\n//     res.data.adminIsLoggedIn && store.dispatch(setAdminInformations({\n//       orders: res.data.orders,\n//       users: res.data.users,\n//       visitors: res.data.visitors,\n//       adminIsLoggedIn: res.data.adminIsLoggedIn\n//     }))\n//   }\n// } catch (error) {\n//   console.log(error);\n//   store.dispatch(setProducts(error.response.data.products))\n// }\n\n// const pages = store.getState().settings.pages\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: pages.main.link,\n  element: /*#__PURE__*/_jsxDEV(IndexPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 14\n  }, this)\n}\n// {\n//   path: \"*\",\n//   element: <NotFoundPage />\n// }\n]);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","reportWebVitals","createBrowserRouter","Navigate","RouterProvider","Provider","store","axios","IndexPage","jsxDEV","_jsxDEV","router","path","pages","main","link","element","fileName","_jsxFileName","lineNumber","columnNumber","root","createRoot","document","getElementById","render","children"],"sources":["C:/Users/Arda/Desktop/detailinx/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './style.css';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserRouter, Navigate, RouterProvider } from \"react-router-dom\"\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\"\nimport axios from \"axios\"\nimport IndexPage from './pages/index/IndexPage';\n\n// store.dispatch(readPagesSettings(settings.pages));\n\n\n\n\n// try {\n//   const res = await axios.post(\"/account/information\")\n//   if (res.data.succeded) {\n//     res.data.user && store.dispatch(setUserInformations(res.data.user))\n//     res.data.products && store.dispatch(setProducts(res.data.products))\n//     res.data.adminIsLoggedIn && store.dispatch(setAdminInformations({\n//       orders: res.data.orders,\n//       users: res.data.users,\n//       visitors: res.data.visitors,\n//       adminIsLoggedIn: res.data.adminIsLoggedIn\n//     }))\n//   }\n// } catch (error) {\n//   console.log(error);\n//   store.dispatch(setProducts(error.response.data.products))\n// }\n\n\n// const pages = store.getState().settings.pages\n\n\nconst router = createBrowserRouter([\n  {\n    path: pages.main.link,\n    element: <IndexPage />\n  },\n  // {\n  //   path: \"*\",\n  //   element: <NotFoundPage />\n  // }\n])\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store} >\n      <RouterProvider router={router} />\n  </Provider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,mBAAmB,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,kBAAkB;AAChF,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;;AAE/C;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,MAAM,GAAGT,mBAAmB,CAAC,CACjC;EACEU,IAAI,EAAEC,KAAK,CAACC,IAAI,CAACC,IAAI;EACrBC,OAAO,eAAEN,OAAA,CAACF,SAAS;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACvB;AACA;AACA;AACA;AACA;AAAA,CACD,CAAC;AAGF,MAAMC,IAAI,GAAGrB,QAAQ,CAACsB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTf,OAAA,CAACL,QAAQ;EAACC,KAAK,EAAEA,KAAM;EAAAoB,QAAA,eACnBhB,OAAA,CAACN,cAAc;IAACO,MAAM,EAAEA;EAAO;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC5B,CACZ,CAAC;;AAED;AACA;AACA;AACAnB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}